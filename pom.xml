<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>
    
    <groupId>org.podval</groupId>
    <artifactId>chumash-questions</artifactId>
    <name>Chumash Questions</name>
    <version>2.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <url>https://github.com/dubinsky/chumash-questions</url>
    
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    
    <organization>
        <name>Podval Group</name>
        <url>http://www.podval.org</url>
    </organization>
    
    <developers>
        <developer>
            <id>dub</id>
            <name>Leonid Dubinsky</name>
            <email>dub@podval.org</email>
            <url>http://dub.podval.org</url>
            <organization>Podval Group</organization>
            <organizationUrl>http://www.podval.org</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
    </developers>
    
    <!--
        I tried to minimize the POM and put as much of the DocBook XSL configuration as possible into the XSL customization layer, so that Oxygen build is easier to configure:
        only what is done here needs to be replicated in Oxygen.
        On the other hand, some configuration that could be placed in the XSL files was consolidated here:
        - to be near the related bits of configuration (img.src.path and copying of the images) or
        - to centralize configuration and avoid duplication (font configuration).
     -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Input directories -->
        <xsl.directory>src/main/xsl</xsl.directory>
        <css.directory>src/main/css</css.directory>
        <images.directory>src/main/images</images.directory>

        <!-- Output directories -->
        <docbkx.output.directory>${project.build.directory}/docbkx</docbkx.output.directory>
        <docbkx.html.output.directory>${docbkx.output.directory}/html</docbkx.html.output.directory>
        <docbkx.epub.output.directory>${docbkx.output.directory}/epub/expanded</docbkx.epub.output.directory>

        <!-- Fonts -->
        <body.font.family>sans-serif</body.font.family>
        <body.font.master>14</body.font.master>
    </properties>
    
    <build>
        <plugins>
            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <version>2.0.15</version>
                
                <dependencies>
                    <dependency>
                        <groupId>net.sf.docbook</groupId>
                        <artifactId>docbook-xml</artifactId>
                        <version>5.0-all</version>
                        <classifier>resources</classifier>
                        <type>zip</type>
                        <scope>runtime</scope>
                    </dependency>
                    
                    <!-- By default, docbkx plugin brings in FOP 1.0, but I want 1.1 -->
                    <dependency>
                        <groupId>org.apache.xmlgraphics</groupId>
                        <artifactId>fop</artifactId>
                        <version>1.1</version>
                        <scope>runtime</scope>
                        <!-- FOP 1.1 POM asks for Avalon 4.2.0, which is not in the repositories. I excluded it and specified a dependency on the latest (?) Avalon Framework below. -->
                        <exclusions>
                            <exclusion>
                                <groupId>org.apache.avalon.framework</groupId>
                                <artifactId>avalon-framework-api</artifactId>
                            </exclusion>
                            <exclusion>
                                <groupId>org.apache.avalon.framework</groupId>
                                <artifactId>avalon-framework-impl</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    
                    <dependency>
                        <groupId>org.apache.avalon.framework</groupId>
                        <artifactId>avalon-framework-api</artifactId>
                        <version>4.3.1</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                
                <configuration>
                    <sourceDirectory>src/main/docbook</sourceDirectory>
                    <includes>book.xml</includes>
                    <xincludeSupported>true</xincludeSupported>
                    
                    <entities>
                        <entity>
                            <name>version</name>
                            <value>${project.version}</value>
                        </entity>
                    </entities>
                </configuration>
                
                <executions>
                    <execution>
                        <id>pdf</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-pdf</goal>
                        </goals>
                        <configuration>
                            <targetDirectory>${docbkx.output.directory}/pdf</targetDirectory>
                            <foCustomization>${xsl.directory}/pdf.xsl</foCustomization>

                            <!-- Fonts -->
                            <body.font.family>${body.font.family}</body.font.family>
                            <body.font.master>${body.font.master}</body.font.master>
                            
                            <!-- Images -->
                            <imgSrcPath>${basedir}/src/main/images/</imgSrcPath>
                        </configuration>
                    </execution>

                    <execution>
                        <id>html</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <configuration>
                            <targetDirectory>${docbkx.html.output.directory}</targetDirectory>
                            <htmlCustomization>${xsl.directory}/html.xsl</htmlCustomization>

                            <!-- CSS -->
                            <htmlStylesheet>css/docbook.css</htmlStylesheet>

                            <!-- Images -->
                            <imgSrcPath>images/</imgSrcPath>

                            <preProcess>
                                <copy todir="${docbkx.html.output.directory}/css" filtering="true">
                                    <fileset dir="${css.directory}"/>
                                    <!-- Fonts (via filtering) -->
                                    <filterset>
                                        <filter token="body.font.family" value="${body.font.family}"/>
                                    </filterset>
                                </copy>
                                <copy todir="${docbkx.html.output.directory}/images">
                                    <fileset dir="${images.directory}"/>
                                </copy>
                            </preProcess>
                        </configuration>
                    </execution>

                    <execution>
                        <id>epub</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-epub</goal>
                        </goals>

                        <configuration>
                            <targetDirectory>${docbkx.epub.output.directory}</targetDirectory>
                            <epubCustomization>${xsl.directory}/epub.xsl</epubCustomization>

                            <!-- CSS -->
                            <htmlStylesheet>css/docbook.css</htmlStylesheet>

                            <!-- Images -->
                            <imgSrcPath>images/</imgSrcPath>

                            <preProcess>
                                <copy todir="${docbkx.epub.output.directory}/css" filtering="true">
                                    <fileset dir="${css.directory}"/>
                                    <!-- Fonts (via filtering) -->
                                    <filterset>
                                        <filter token="body.font.family" value="${body.font.family}"/>
                                    </filterset>
                                </copy>
                                <copy todir="${docbkx.epub.output.directory}/images">
                                    <fileset dir="${images.directory}"/>
                                </copy>
                            </preProcess>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
